# -*- coding: utf-8 -*-
"""Data profiling - Best selling books.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UZl8SZZAHy8RAXkmqoTYUUKm1xSvAkh-

Note: Preparation & Pre Processing menggunakan dataset berikut:
https://www.kaggle.com/datasets/imaditia/indonesia-reading-interest-2020-2023
"""

!pip install ydata-profiling

# 1. Mengimpor library
import pandas as pd#Library utama untuk memanipulasi dan menganalisis data.
import numpy as np#Library dasar untuk operasi numerik
import matplotlib.pyplot as plt#Library untuk membuat visualisasi data
import seaborn as sns#Library yang dibangun di atas matplotlib yang lebih baik untuk visualisasi data
from ydata_profiling import ProfileReport # Mengimpor ProfileReport

# --- Langkah 1: Memuat Dataset ---
try:
    df = pd.read_csv("best-selling-books.csv")
    print("\nDataset berhasil dimuat.")
    print("Info Data Awal:")
    df.info()
    print("\nLima baris pertama data:")
    print(df.head())
except FileNotFoundError:
    print("\nERROR: File 'best-selling-books.csv' tidak ditemukan.")
    print("Dipastikan Anda sudah mengunggah file ini ke sesi Google Colab Anda.")
    exit()

# --- Langkah 2: Melakukan Data Profiling ---
print("\nMelakukan Data Profiling (ini mungkin memakan waktu beberapa saat)...")
profile = ProfileReport(df, title="Laporan Profiling Buku Terlaris", explorative=True)
profile.to_widgets()
print("Laporan Data Profiling selesai. Silakan gulir ke atas untuk melihatnya.")

# --- Langkah 3: Visualisasi Data (Setelah Profiling) ---

# Visualisasi 1: Histogram distribusi 'Approximate sales in millions'
plt.figure(figsize=(10, 6))
plt.hist(df['Approximate sales in millions'].dropna(), bins=30, color='skyblue', edgecolor='black')
plt.title('Distribusi Approximate Sales in Millions', fontsize=16)
plt.xlabel('Approximate Sales in Millions', fontsize=12)
plt.ylabel('Frekuensi', fontsize=12)
plt.grid(True)
plt.savefig('approximate_sales_histogram.png')
print("\nVisualisasi 'approximate_sales_histogram.png' disimpan.")


# Visualisasi 2: Bar Chart Horisontal untuk Top 10 Genre
# Mengambil 10 genre teratas
top_10_genres = df['Genre'].value_counts().head(10)
plt.figure(figsize=(12, 8)) # Ukuran figure lebih besar untuk label yang panjang
sns.barplot(x=top_10_genres.values, y=top_10_genres.index, palette='viridis') # Menggunakan barplot horisontal
plt.title('Top 10 Genre Buku Terlaris', fontsize=16)
plt.xlabel('Jumlah Buku', fontsize=12)
plt.ylabel('Genre', fontsize=12)
plt.tight_layout()
plt.savefig('top_10_genres.png')
print("\nVisualisasi 'top_10_genres.png' disimpan.")

# Visualisasi 4: Horizontal Bar Chart untuk Top 10 Penulis
# Mengambil 10 penulis teratas
author_counts = df['Author(s)'].value_counts().head(10)
plt.figure(figsize=(12, 8))
sns.barplot(x=author_counts.values, y=author_counts.index, palette='crest') # Menggunakan barplot horisontal
plt.title('Top 10 Penulis dengan Buku Terlaris Terbanyak', fontsize=16)
plt.xlabel('Jumlah Buku', fontsize=12)
plt.ylabel('Penulis', fontsize=12)
plt.tight_layout()
plt.savefig('top_10_authors.png')
print("Visualisasi 'top_10_authors.png' disimpan.")

# Visualisasi 5: Box Plot untuk Top 10 Tahun Paling Produktif (Opsional, jika ingin melihat distribusi)
# Mengidentifikasi 10 tahun dengan jumlah buku terbanyak
top_10_years_by_count = df['First published'].value_counts().head(10).index
df_top_years_by_count = df[df['First published'].isin(top_10_years_by_count)]

plt.figure(figsize=(12, 8))
# Memastikan tahun diurutkan agar visualisasi rapi
sns.boxplot(x='First published', y='Approximate sales in millions', data=df_top_years_by_count.sort_values('First published'), palette='coolwarm')
plt.title('Distribusi Approximate Sales pada 10 Tahun Paling Banyak Menerbitkan Buku', fontsize=16)
plt.xlabel('Tahun Publikasi Pertama', fontsize=12)
plt.ylabel('Approximate Sales in Millions', fontsize=12)
plt.xticks(rotation=45)
plt.tight_layout()
plt.savefig('box_plot_top_10_years_by_count.png')
print("Visualisasi 'box_plot_top_10_years_by_count.png' disimpan.")